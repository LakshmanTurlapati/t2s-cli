name: Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-py${{ matrix.python-version }}-pip-
    
    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install sentencepiece protobuf
      continue-on-error: true
    
    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
      continue-on-error: true
    
    - name: Install basic Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e "."
    
    - name: Install test dependencies
      run: |
        pip install pytest
      continue-on-error: true
    
    - name: Verify basic installation
      run: |
        python -c "import t2s; print(f'T2S version: {t2s.__version__}')"
      continue-on-error: true
    
    - name: Test core imports
      run: |
        python -c "from t2s.core.engine import T2SEngine; print('Core engine imported successfully')"
      continue-on-error: true
    
    - name: Test CLI help
      run: |
        t2s --help
      continue-on-error: true

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short
      continue-on-error: true
    
    - name: Test package can be built
      run: |
        pip install build
        python -m build
        ls -la dist/
      continue-on-error: true

  lint:
    name: Code Quality & Linting (Informational)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort
        pip install -e "."
      continue-on-error: true
    
    - name: Check formatting with Black (informational)
      run: black --check --diff t2s/ tests/
      continue-on-error: true
    
    - name: Check import sorting with isort (informational)
      run: isort --check-only --diff t2s/ tests/
      continue-on-error: true
    
    - name: Lint with flake8 (informational)
      run: flake8 t2s/ tests/ --max-line-length=88 --extend-ignore=E203,W503,E501,F401
      continue-on-error: true

  security:
    name: Security Scan (Informational)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
        pip install -e "."
      continue-on-error: true
    
    - name: Run safety check for known vulnerabilities
      run: safety check --json --output safety-report.json
      continue-on-error: true
    
    - name: Run bandit for security issues
      run: bandit -r t2s/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports-${{ github.sha }}
        path: |
          safety-report.json
          bandit-report.json
      continue-on-error: true 